<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[キャンベルとヨセミテ]]></title>
  <subtitle><![CDATA[Webまわりのいろいろなことを試してそれを公開してみるページ]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://camberbridge.github.io//"/>
  <updated>2016-02-12T00:16:04.000Z</updated>
  <id>http://camberbridge.github.io//</id>
  
  <author>
    <name><![CDATA[UEC_Abe]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[トピックモデルの実験]]></title>
    <link href="http://camberbridge.github.io/2016/02/11/%E3%83%88%E3%83%94%E3%83%83%E3%82%AF%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AE%E5%AE%9F%E9%A8%93/"/>
    <id>http://camberbridge.github.io/2016/02/11/トピックモデルの実験/</id>
    <published>2016-02-11T07:24:48.000Z</published>
    <updated>2016-02-12T00:16:04.000Z</updated>
    <content type="html"><![CDATA[<h2 id="概要">概要</h2><p>トピックモデルとは, 文書集合から特徴(話題)を抽出する手法です. また, それぞれの文書が持つ話題を抽出したり, 文書間の類似性を抽出することが可能な手法です.<br>そこで今回は, トピックモデルを用いてニュース記事を対象に話題を抽出する実験を行ってみます. なお, トピックモデルの中でも特に潜在意味解析(latent semantic analysis, LSA)を実際に用いています(正確には, LSAはベクトル空間モデルであり, このLSAを確率モデルに拡張した確率的潜在意味解析がトピックモデルです. しかし, トピックモデルのカテゴリ(離散値確率)分布は, LSAで用いる行列分解手法として捉えることができるので, 僕は同じ物として扱っています). </p>
<h3 id="潜在意味解析(latent_semantic_analysis,_LSA)">潜在意味解析(latent semantic analysis, LSA)</h3><p>LSAは, 文書集合データを(文書総数 x 単語数)の行列Nで表現したときに, 掛け合わせることで再び元の行列を構築できるような, 小さな(低ランクの)2つの行列を見つけることをします(これを非負値行列因子分解と言います). このとき, それぞれの行列は特徴の組み合わせで構築されているため, この特徴を用いることによって文書に潜在するトピック(文書を特徴づける単語)を抽出します. </p>
<h3 id="非負値行列因子分解(nonnegative_matrix_factorization,_NMF)">非負値行列因子分解(nonnegative matrix factorization, NMF)</h3><p>NMFとは, 行列で表現した文字・画像・音声などのデータ(非負値行列)を指定する基底数に行列分解し, 低ランクの表現にすることによって, それぞれの行列が持つ潜在的な特徴を抽出することを可能にした行列低ランク近似手法です. 簡単に言えば, 非負値行列を2つの非負値行列に分解するアルゴリズムです. 以下, NMFについて詳細に説明します. </p>
<p>図1に示すように, 文書集合データを(D x V)の行列Nで表現するとします. ここでDは文書総数, Vは単語数です.<br><img src="http://camberbridge.github.io/imgs/nmf.png" alt="図1 NMF"><br>このNを分解すると, W(K x D)の基底行列とH(K x V)の特徴重みの行列となります. そしてこれらWとHを掛け合わせることにより, 元の行列Nの近似値が得られますが, 完全に一致する行列W, Hの値を求めるのは困難です. </p>
<p>そこで, この近似値を求める問題は, 行列Nと転置したWにHを掛け合わせた行列の距離を小さくする問題として扱うことができます. 具体的には, フロベニウスノルムの最小化を行います(図2).<br><img src="http://camberbridge.github.io/imgs/frobenius_norm.png" alt="図2 フロベニウスノルムの最小化"><br>フロベニウスノルムの最小化問題には, 模擬アニーリングや勾配降下法, 乗法的更新ルールなど, いくつかの数学的解法が提案されていますが, NMFで最も用いられる解法は乗法的更新ルールです(<a href="https://docs.google.com/viewer?a=v&amp;pid=sites&amp;srcid=ZGVmYXVsdGRvbWFpbnx0aGVzaXNvbnN0b2NrbWluaW5nfGd4OjQ5OThmZTE0NThhZTE5ODc" target="_blank" rel="external">参考論文</a>).<br>乗法的更新ルールの式を図3に示します.<br><img src="http://camberbridge.github.io/imgs/jyohotekikoushinrule.png" alt="図3 乗法的更新ルールの式"><br>そして, フロベニウスノルムの最小化問題を解くために, NMFでは行列WとHをランダムな値で初期化し, 乗法的更新ルールの式にしたがってWとHを更新して距離が収束するまでこの処理を繰り返します. NMFはこのようにして行列の低ランク近似を行います. </p>
<hr>
<h2 id="方針">方針</h2><ul>
<li>ニュース記事を文書として, 大量の文書から話題になっているトピックを抽出します. さらに, 話題になっているトピックを持つ文書を抽出します. </li>
<li>各文書が持つ潜在的な話題を抽出します. </li>
</ul>
<h2 id="方法">方法</h2><ol>
<li>様々な分野の情報を発信するサイト<a href="http://allabout.co.jp/" target="_blank" rel="external">All About</a>が公開している<a href="http://rss.allabout.co.jp/" target="_blank" rel="external">RSS</a>を用いて文書を収集する.</li>
<li>収集した各文書について本文抽出, 形態素解析の処理を施すことによって形態素単位で分かち書きする.</li>
<li>単語をBOW(bug-of-words)表現する.<ol>
<li>各文書に存在する単語について, その文書における出現回数を数える.</li>
<li>全文書に存在する単語について, 全文書における出現回数を数える. </li>
<li>1と2から特徴行列と特徴単語の集合を生成する. </li>
</ol>
</li>
<li>NMFを用いて文書の持つ潜在的な特徴を抽出する. </li>
</ol>
<h2 id="実装">実装</h2><h3 id="BOWの実装">BOWの実装</h3><ol>
<li><p>Pythonのfeedparserを用いてRSSから文書を取得します. この時, 出来るだけ異なる分野の記事(RSS)を取得するようにします. これはトピックモデル全般に言えることです. 今回は下記のRSSを使用しました. </p>
<figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">feedlist=[<span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/health/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/house/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/domestic/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/ch_creditcard/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/beautydiet/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/mobile/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/pet/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/marriage/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/mensbeauty/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/fashion/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/ch_sweets/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/examination/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/auto/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/homeelectronics/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/ch_sports/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/ch_game/',</span></span><br><span class="line">    <span class="string">'http</span>:<span class="comment">//rss.allabout.co.jp/aa/latest/ch/ch_hobby/']</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>取得したHTMLから本文の抽出を行います. 具体的には, HTMLタグを除いた文字列を集める処理を施します. </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stripHTML</span><span class="params">(h)</span>:</span></span><br><span class="line">    p=<span class="string">''</span></span><br><span class="line">    s=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> h:</span><br><span class="line">        <span class="keyword">if</span> c==<span class="string">'&lt;'</span>: s=<span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> c==<span class="string">'&gt;'</span>:</span><br><span class="line">            s=<span class="number">0</span></span><br><span class="line">            p+=<span class="string">' '</span></span><br><span class="line">        <span class="keyword">elif</span> s==<span class="number">0</span>: p+=c</span><br><span class="line">    <span class="keyword">return</span> p</span><br></pre></td></tr></table></figure>
</li>
<li><p>抽出した本文を形態素単位で分かち書きします. 具体的には, 形態素解析器<a href="https://pypi.python.org/pypi/Janome" target="_blank" rel="external">Janome</a>を用いて形態素解析し, 定める単語単位で分かち書きします. 定める単語は, 以下のルールに従う単語としました.</p>
<ul>
<li>名詞であること </li>
<li>接尾辞でないこと</li>
<li>代名詞でないこと</li>
<li>非自立語でないこと</li>
<li>数でないこと</li>
<li>形容動詞語幹でないこと</li>
<li>(英単語の場合)文字列長が4以上であること<br>下記, 単語を分割するコード. <figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">def separatewords(<span class="keyword">text</span>):</span><br><span class="line">    separatedWord=[]</span><br><span class="line">    t=Tokenizer()</span><br><span class="line">    tokens=t.tokenize(unicode(<span class="keyword">text</span>, <span class="string">"utf-8"</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">token</span> <span class="operator">in</span> tokens:</span><br><span class="line">        posList=<span class="keyword">token</span>.part_of_speech.<span class="built_in">split</span>(<span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">        pos1=posList[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> isinstance(pos1, unicode):</span><br><span class="line">          pos1=pos1.encode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">        pos2=posList[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> isinstance(pos2, unicode):</span><br><span class="line">          pos2=pos2.encode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">        ruby=<span class="keyword">token</span>.reading</span><br><span class="line">        <span class="keyword">if</span> isinstance(ruby, unicode):</span><br><span class="line">          ruby=ruby.encode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> pos1==<span class="string">"名詞"</span>:</span><br><span class="line">            <span class="keyword">if</span> pos2!=<span class="string">"接尾"</span> <span class="operator">and</span> pos2!=<span class="string">"代名詞"</span> <span class="operator">and</span> pos2!=<span class="string">"非自立"</span> <span class="operator">and</span> pos2!=<span class="string">"数"</span> <span class="operator">and</span> pos2!=<span class="string">"形容動詞語幹"</span>:</span><br><span class="line">                <span class="keyword">if</span> ruby!=<span class="string">"*"</span>:</span><br><span class="line">                    separatedWord.append(<span class="keyword">token</span>.surface.<span class="built_in">lower</span>())</span><br><span class="line">                    print <span class="keyword">token</span>.surface.<span class="built_in">lower</span>()</span><br><span class="line">                elif pos2!=<span class="string">"サ変接続"</span> <span class="operator">and</span> <span class="built_in">len</span>(<span class="keyword">token</span>.surface)&gt;<span class="number">3</span>:</span><br><span class="line">                    <span class="comment"># 英単語に関しては4文字以上の単語を扱う</span></span><br><span class="line">                    separatedWord.append(<span class="keyword">token</span>.surface.<span class="built_in">lower</span>())</span><br><span class="line">                    print <span class="keyword">token</span>.surface.<span class="built_in">lower</span>()</span><br><span class="line"></span><br><span class="line">    <span class="constant">return</span> separatedWord</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>単語をBOW表現します. 具体的にはRSSで取得した文書について, タイトルと本文を抽出して存在する単語の数をカウントします. そして, 単語の出現回数を保持した行列を生成します. </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getarticlewords</span><span class="params">()</span>:</span></span><br><span class="line">    allwords=&#123;&#125;  <span class="comment"># 全文書の総単語とその出現回数</span></span><br><span class="line">    articlewords=[]  <span class="comment"># 各文書の総単語とその出現回数</span></span><br><span class="line">    articletitles=[]  <span class="comment"># 文書タイトル</span></span><br><span class="line">    ec=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> feed <span class="keyword">in</span> feedlist:</span><br><span class="line">        f=feedparser.parse(feed)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># すべての記事をループする</span></span><br><span class="line">        <span class="keyword">for</span> e <span class="keyword">in</span> f.entries:</span><br><span class="line">            <span class="comment"># 同一の記事の場合は飛ばす</span></span><br><span class="line">            <span class="keyword">if</span> e.title <span class="keyword">in</span> articletitles: <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 単語を抽出する</span></span><br><span class="line">            txt=e.title.encode(<span class="string">'utf8'</span>)+stripHTML(e.description.encode(<span class="string">'utf8'</span>))</span><br><span class="line">            words=separatewords(txt)</span><br><span class="line">            articlewords.append(&#123;&#125;)</span><br><span class="line">            articletitles.append(e.title)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># allwordsとarticlewordsにあるこの単語のカウントを増やす</span></span><br><span class="line">            <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">                allwords.setdefault(word,<span class="number">0</span>)</span><br><span class="line">                allwords[word]+=<span class="number">1</span></span><br><span class="line">                articlewords[ec].setdefault(word,<span class="number">0</span>)</span><br><span class="line">                articlewords[ec][word]+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">            ec+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> allwords,articlewords,articletitles</span><br></pre></td></tr></table></figure>
</li>
<li><p>行を文書総数, 列を特徴単語総数とした特徴行列と, 全文書に存在する特徴単語の集合を生成します. なお, 特徴単語は一般的な単語であるが一般的すぎない単語としました. 具体的には, 1文書に出現する回数が4以上, かつ文書総数の6割未満の単語を特徴単語としました. </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makematrix</span><span class="params">(allw,articlew)</span>:</span></span><br><span class="line">    wordvec=[]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 一般的だが一般的すぎない(特徴があるとする)単語のみを利用する</span></span><br><span class="line">    <span class="keyword">for</span> w,c <span class="keyword">in</span> allw.items():</span><br><span class="line">        <span class="keyword">if</span> c&gt;<span class="number">3</span> <span class="keyword">and</span> c&lt;len(articlew)*<span class="number">0.6</span>: </span><br><span class="line">            wordvec.append(w)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 各文書における特徴単語の出現回数の分布を持つ行列(特徴行列)を生成する</span></span><br><span class="line">    l1=[[(word <span class="keyword">in</span> f <span class="keyword">and</span> f[word] <span class="keyword">or</span> <span class="number">0</span>) <span class="keyword">for</span> word <span class="keyword">in</span> wordvec] <span class="keyword">for</span> f <span class="keyword">in</span> articlew]</span><br><span class="line">    <span class="keyword">return</span> l1,wordvec</span><br></pre></td></tr></table></figure>
</li>
<li><p>Pythonインタプリタを使い, 上記コードによって取得した文書から特徴単語を抽出し, BOW表現する様子を確認してみたいと思います. なお, 上記コードをまとめたファイルを<a href="https://github.com/camberbridge/camberbridge.github.io/blob/master/assets/sources/newsfeatures.py" target="_blank" rel="external">GitHub</a>にあげておきます. </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ python</span><br><span class="line">&gt;&gt;&gt; import newsfeatures</span><br><span class="line">&gt;&gt;&gt; allw,artw,artt=newsfeatures.<span class="function"><span class="title">getarticlewords</span><span class="params">()</span></span></span><br><span class="line">&gt;&gt;&gt; wordmatrix,wordvec=newsfeatures.<span class="function"><span class="title">makematrix</span><span class="params">(allw,artw)</span></span></span><br><span class="line">&gt;&gt;&gt; <span class="function"><span class="title">len</span><span class="params">(artt)</span></span></span><br><span class="line"><span class="number">340</span></span><br><span class="line">&gt;&gt;&gt; <span class="function"><span class="title">len</span><span class="params">(wordvec)</span></span></span><br><span class="line"><span class="number">513</span></span><br><span class="line">&gt;&gt;&gt; <span class="function"><span class="title">len</span><span class="params">(wordmatrix)</span></span></span><br><span class="line"><span class="number">340</span></span><br><span class="line">&gt;&gt;&gt; <span class="function"><span class="title">len</span><span class="params">(wordmatrix[<span class="number">0</span>])</span></span></span><br><span class="line"><span class="number">513</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>取得した記事340個から特徴単語を513個抽出できました. そしてBOW表現した特徴行列wordmatrixが得られました. </p>
<h3 id="NMFの実装">NMFの実装</h3><p>特徴行列が得られたので, NMFによって文書の持つ潜在的な特徴を抽出します. </p>
<ol>
<li><p>フロベニウスノルムの最小化のために, 残差平方和を求めるプログラムを用意します. </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">difcost</span><span class="params">(a,b)</span>:</span></span><br><span class="line">        dif=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(shape(a)[<span class="number">0</span>]):  <span class="comment"># 行</span></span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(shape(a)[<span class="number">1</span>]):  <span class="comment"># 列</span></span><br><span class="line">                        dif+=pow(a[i,j]-b[i,j],<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> dif</span><br></pre></td></tr></table></figure>
</li>
<li><p>NMFを実装します. 引数にはNMFする(numpyでmatrix化した)特徴行列, 因子の数, 乗法的更新ルールで更新する回数を与えます. なお, ここで与える因子の数が全文書から抽出したいトピックの数になります. </p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">def factorize(v,pc=10,iter=50):</span><br><span class="line">        ic=shape(v)[0]  # vの行数</span><br><span class="line">        fc=shape(v)[1]  # vの列数</span><br><span class="line"></span><br><span class="line">        # 重みの行列(w)と特徴の行列(<span class="keyword">h</span>)をランダムな値で初期化</span><br><span class="line">        w=<span class="literal">matrix</span>([[random.random() <span class="keyword">for</span> j <span class="keyword">in</span> <span class="keyword">range</span>(pc)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(ic)])</span><br><span class="line">        <span class="keyword">h</span>=<span class="literal">matrix</span>([[random.random() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(fc)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(pc)])</span><br><span class="line"></span><br><span class="line">        # 乗法的更新ルール. iter回繰り返す</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(iter):</span><br><span class="line">                <span class="keyword">wh</span>=w*<span class="literal">h</span></span><br><span class="line"></span><br><span class="line">                # 残差平方和の計算</span><br><span class="line">                cost=difcost(v,<span class="keyword">wh</span>)</span><br><span class="line">                # 10回ごとに残差平方和を表示</span><br><span class="line">                <span class="keyword">if</span> i%10==0: <span class="keyword">print</span> cost</span><br><span class="line">                # 行列が完全に因子分解されたら終了</span><br><span class="line">                <span class="keyword">if</span> cost==0: <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                # 特徴重みの行列を更新</span><br><span class="line">                hn=(transpose(w)*v)</span><br><span class="line">                hd=(transpose(w)*w*<span class="keyword">h</span>)</span><br><span class="line">                <span class="keyword">h</span>=<span class="literal">matrix</span>(array(<span class="keyword">h</span>)*array(hn)/array(hd))</span><br><span class="line"></span><br><span class="line">                # 基底行列を更新</span><br><span class="line">                wn=(v*transpose(<span class="keyword">h</span>))</span><br><span class="line">                wd=(w*<span class="keyword">h</span>*transpose(<span class="keyword">h</span>))</span><br><span class="line">                ## 実行時にエラー(RuntimeWarning: invalid value encountered <span class="keyword">in</span> divide)が出るなら</span><br><span class="line">                #wd = [[1e-20 <span class="keyword">if</span> (x - 1e-20 &lt; 0) <span class="keyword">else</span> x <span class="keyword">for</span> x <span class="keyword">in</span> lst] <span class="keyword">for</span> lst <span class="keyword">in</span> wd.tolist()]</span><br><span class="line">                w=<span class="literal">matrix</span>(array(w)*array(wn)/array(wd))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> w,<span class="literal">h</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>上記コードによって生成されるのは基底行列と特徴重みの行列なので, 抽出したトピックを見やすい形式で表示する&amp;ファイルに書き出すプログラムを用意します.<br>このプログラムにより, 抽出したトピック(トピックにおいて出現確率が高い特徴単語6個)と, そのトピックを持つ文書上位3件を表示&amp;書き出します.</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">def showfeatures(w,<span class="keyword">h</span>,titles,wordvec,<span class="keyword">out</span>='features.txt'):</span><br><span class="line">    with <span class="keyword">open</span>(<span class="keyword">out</span>, <span class="string">"w"</span>) <span class="keyword">as</span> <span class="keyword">outfile</span>:</span><br><span class="line">        pc,wc=shape(<span class="keyword">h</span>)</span><br><span class="line">        toppatterns=[[] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(len(titles))]</span><br><span class="line">        patternnames=[]</span><br><span class="line"></span><br><span class="line">        # 因子数分繰り返し</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(pc):</span><br><span class="line">            slist=[]</span><br><span class="line">            # 単語とその重みのリストを作る</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="keyword">range</span>(wc):</span><br><span class="line">                slist.<span class="keyword">append</span>((<span class="keyword">h</span>[i,j],wordvec[j]))</span><br><span class="line">            # 単語のリストを降順に並び替え</span><br><span class="line">            slist.<span class="keyword">sort</span>()</span><br><span class="line">            slist.<span class="literal">reverse</span>()</span><br><span class="line"></span><br><span class="line">            # 上位6つの要素(特徴語)を出力</span><br><span class="line">            <span class="keyword">n</span>=[s[1] <span class="keyword">for</span> s <span class="keyword">in</span> slist[0:6]]</span><br><span class="line">            <span class="keyword">outfile</span>.write(str(<span class="keyword">n</span>)+'\<span class="keyword">n</span>')</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"トピック"</span> + str(i+1) + <span class="string">": "</span>,</span><br><span class="line">            <span class="keyword">for</span> hoge <span class="keyword">in</span> <span class="keyword">n</span>:</span><br><span class="line">                <span class="keyword">print</span> hoge,</span><br><span class="line">            <span class="keyword">print</span> <span class="string">""</span></span><br><span class="line">            patternnames.<span class="keyword">append</span>(<span class="keyword">n</span>)</span><br><span class="line"></span><br><span class="line">            # 当該特徴を持つ文書のリストを作る</span><br><span class="line">            <span class="keyword">flist</span>=[]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="keyword">range</span>(len(titles)):</span><br><span class="line">                # 該当する重みに対応する文書タイトルを重みに結合</span><br><span class="line">                <span class="keyword">flist</span>.<span class="keyword">append</span>((w[j,i],titles[j]))</span><br><span class="line">                toppatterns[j].<span class="keyword">append</span>((w[j,i],i,titles[j]))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">flist</span>.<span class="keyword">sort</span>()</span><br><span class="line">            <span class="keyword">flist</span>.<span class="literal">reverse</span>()</span><br><span class="line"></span><br><span class="line">            # 上位3つの文書を表示</span><br><span class="line">            <span class="keyword">for</span> f <span class="keyword">in</span> <span class="keyword">flist</span>[0:3]:</span><br><span class="line">                <span class="keyword">outfile</span>.write(str(f)+'\<span class="keyword">n</span>')</span><br><span class="line">                <span class="keyword">for</span> hoge <span class="keyword">in</span> f:</span><br><span class="line">                    <span class="keyword">print</span> hoge,</span><br><span class="line">                <span class="keyword">print</span> <span class="string">""</span></span><br><span class="line">            <span class="keyword">outfile</span>.write('\<span class="keyword">n</span>')</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> toppatterns,patternnames</span><br></pre></td></tr></table></figure>
</li>
<li><p>実際に, 特徴行列にNMFを適用して得られるトピックを確認してみます. なお, 因子数を20個, イテレーション数を50回としました. </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import nmf</span><br><span class="line">&gt;&gt;&gt; v=matrix(wordmatrix)</span><br><span class="line">&gt;&gt;&gt; weights,feat=nmf.factorize(v,pc=<span class="number">20</span>,iter=<span class="number">50</span>)</span><br><span class="line"><span class="number">4644026.99428</span></span><br><span class="line"><span class="number">6276.23883311</span></span><br><span class="line"><span class="number">6106.81822625</span></span><br><span class="line"><span class="number">6076.58094169</span></span><br><span class="line"><span class="number">6064.71184922</span></span><br><span class="line">&gt;&gt;&gt; topp,pn=nmf.showfeatures(weights,feat,artt,wordvec)</span><br><span class="line">トピック<span class="number">1</span>:  メーカー 特徴 家 大手 マリオ 住宅 </span><br><span class="line"><span class="number">15.4663497597</span> ヒーターのメーカー別の特徴 </span><br><span class="line"><span class="number">13.3104830612</span> ゲーム業界から見たスーパーマリオメーカー問題 </span><br><span class="line"><span class="number">13.2819191304</span> 似て非なる大手住宅メーカー<span class="number">10</span>社の特徴まとめ【<span class="number">2016</span>年版】 </span><br><span class="line">トピック<span class="number">2</span>:  ポイント 楽天 現金 方法 ネット スーパー </span><br><span class="line"><span class="number">19.7595240853</span> 無印良品で楽天スーパーポイントやTポイントを貯める </span><br><span class="line"><span class="number">16.7933330305</span> ポイント交換手数料がかからずに現金化する方法とは？ </span><br><span class="line"><span class="number">13.6775064617</span> Amazonの買い物で<span class="number">2</span>つのポイントを貯める！ </span><br><span class="line">トピック<span class="number">3</span>:  カード ドコモ 利用 クレジットカード サービス メイン </span><br><span class="line"><span class="number">22.0895104043</span> dポイントカードは持っていたほうが良い？ </span><br><span class="line"><span class="number">17.0282753695</span> クレジットカード、<span class="number">2</span>枚目はこうやって選べ！ </span><br><span class="line"><span class="number">14.0005808073</span> まだまだあるdカード・dカード GOLDの魅力とは？ </span><br><span class="line">トピック<span class="number">4</span>:  人 口内 口 トラブル 環境 悪化 </span><br><span class="line"><span class="number">23.2705036456</span> 口臭や口内炎、原因は口内環境の悪化？ケアして解消 </span><br><span class="line"><span class="number">20.316718056</span> 全身の健康は口から　口臭を「クマ笹歯みがき」で予防 </span><br><span class="line"><span class="number">6.55166834564</span> 頭皮のかゆみ…くりかえす原因は常在菌による炎症？ </span><br><span class="line">トピック<span class="number">5</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line"><span class="number">11.9575251978</span> iPhoneで着信時に通知ランプを点滅させる方法 </span><br><span class="line"><span class="number">10.3358206124</span> 機能豊富なiPhoneのカメラアプリを使いこなそう </span><br><span class="line"><span class="number">10.1530091745</span> iPhone標準ブラウザ「Safari」の便利機能<span class="number">10</span>選 </span><br><span class="line">トピック<span class="number">6</span>:  対策 指輪 雪 女性 試験 男性 </span><br><span class="line"><span class="number">15.9903054461</span> 都心で雪が降る日に慌てないようやっておくべき全対策 </span><br><span class="line"><span class="number">12.2442409343</span> 既婚者なのに結婚指輪をつけない男性のホンネと対策 </span><br><span class="line"><span class="number">8.33584814286</span> 便秘太りさん必見、原因別の「腸活」便秘対策法 </span><br><span class="line">トピック<span class="number">7</span>:  将棋 愛 ガイド 登場 宴会 シーン </span><br><span class="line"><span class="number">19.9652514536</span> 将棋ファン感涙！将棋シーンが登場する漫画<span class="number">10</span>選 </span><br><span class="line"><span class="number">14.6345881045</span> 愛棋家ぶらり旅ガイド(<span class="number">1</span>)別府・将棋処「と」 </span><br><span class="line"><span class="number">14.2962735508</span> 愛棋家のための宴会ソング-将棋替え歌・キュート編 </span><br><span class="line">トピック<span class="number">8</span>:  子ども 薬 親 問題 ストレス 受験 </span><br><span class="line"><span class="number">19.6893953432</span> 子どもの将来を受験で潰さないために…親の心得と接し方 </span><br><span class="line"><span class="number">17.960475885</span> アイスやジュースはNG！薬を嫌がる子供への飲ませ方 </span><br><span class="line"><span class="number">15.0014403268</span> 子どもを薬嫌いにさせないための「服薬補助ゼリー」 </span><br><span class="line">トピック<span class="number">9</span>:  ヨガ ポーズ 人 犬 効果 下 </span><br><span class="line"><span class="number">24.9219551555</span> 基本のヨガポーズをマスター！下を向いた犬のポーズ </span><br><span class="line"><span class="number">15.0087767171</span> まずはココから！自宅でできる初心者向けのヨガポーズ </span><br><span class="line"><span class="number">11.0473594218</span> 初心者でも簡単!?「空中ヨガ」で新感覚エクササイズ </span><br><span class="line">トピック<span class="number">10</span>:  体 幹 トレーニング メニュー 基本 効果 </span><br><span class="line"><span class="number">34.4317754799</span> 体幹トレーニングの基本<span class="number">5</span>メニューで、劇的に体型を変える！ </span><br><span class="line"><span class="number">14.7631212143</span> 冬太り撃退に！体幹トレーニング「レッグバランス」 </span><br><span class="line"><span class="number">13.7327354842</span> 【動画】<span class="number">1</span>分で簡単！効果絶大な体幹トレーニング<span class="number">3</span>選 </span><br><span class="line">トピック<span class="number">11</span>:  人気 パン カフェ コーヒー 栃木 中古 </span><br><span class="line"><span class="number">13.7362428489</span> 栃木を訪れたら絶対食べたい！ 地元で愛される人気パン<span class="number">6</span>選 </span><br><span class="line"><span class="number">12.6581465276</span> 【中古車】ルパンにも登場した人気の名車<span class="number">6</span>選【自動車】 </span><br><span class="line"><span class="number">10.5455508799</span> 人気のフィアット<span class="number">500</span>が新車時の半額以下に！ </span><br><span class="line">トピック<span class="number">12</span>:  紹介 今回 日本 月 金沢 五輪 </span><br><span class="line"><span class="number">11.911419134</span> ルーペで味わい尽くす！凹版切手の魅力 </span><br><span class="line"><span class="number">11.4798284003</span> 贈って喜ばれる！金沢っ子おすすめの新おいしいお土産 </span><br><span class="line"><span class="number">11.0113306297</span> これぞ日本の美！奥の細道シリーズの魅力に迫る！ </span><br><span class="line">トピック<span class="number">13</span>:  チョコ バレンタイン 褒美 自分 ショコラ チョコレート </span><br><span class="line"><span class="number">22.566436019</span> スリーエフのバレンタイン<span class="number">2016</span>！ご褒美チョコ＆感謝チョコ厳選<span class="number">5</span> </span><br><span class="line"><span class="number">19.0753834192</span> ファミマのバレンタイン<span class="number">2016</span>！あの人気店の味＆本格チョコ厳選<span class="number">7</span> </span><br><span class="line"><span class="number">17.9912005562</span> 自分へのご褒美チョコレート<span class="number">2016</span>厳選バレンタイン </span><br><span class="line">トピック<span class="number">14</span>:  プレート ホット 鍋 グリル 方式 選び方 </span><br><span class="line"><span class="number">19.1341121925</span> ホットプレートとグリル鍋の違い </span><br><span class="line"><span class="number">18.6032897757</span> ホットプレート・グリル鍋のメーカー別特徴 </span><br><span class="line"><span class="number">14.5889482845</span> ホットプレート・グリル鍋の加熱方式 </span><br><span class="line">トピック<span class="number">15</span>:  木 魅力 街 プロ 紹介 場所 </span><br><span class="line"><span class="number">37.0109893407</span> 街に暮らしにもっと木を！木のプロが語る「木化」とは </span><br><span class="line"><span class="number">4.33374555819</span> 自然豊かな表情が魅力の「国産ナラ材」 </span><br><span class="line"><span class="number">2.98959349923</span> プロは楽して踊っていると言う事実 </span><br><span class="line">トピック<span class="number">16</span>:  住宅 建築 設計 事務所 経験 現在 </span><br><span class="line"><span class="number">21.6811595627</span> 納谷学+納谷新［納谷建築設計事務所］ </span><br><span class="line"><span class="number">16.2771733003</span> 岸本和彦［acaa建築研究所］ </span><br><span class="line"><span class="number">14.5906325228</span> ヴィンテージ住宅のリノベーション［井の頭の住宅］ </span><br><span class="line">トピック<span class="number">17</span>:  猫 目 映画 今回 理由 妊娠 </span><br><span class="line"><span class="number">19.7927332553</span> 猫の目を見つめてはダメ？ </span><br><span class="line"><span class="number">18.6993266635</span> 猫が帰って来ない!?迷い猫の探し方 </span><br><span class="line"><span class="number">16.6343533117</span> 立つ猫――猫が二本足になる理由って？ </span><br><span class="line">トピック<span class="number">18</span>:  塾 選び 受験 チェックポイント 中学生 失敗 </span><br><span class="line"><span class="number">24.2675675159</span> 塾選び、個別指導塾の盲点とチェックポイント </span><br><span class="line"><span class="number">21.8312760412</span> 失敗しない塾選び、<span class="number">7</span>つのポイント </span><br><span class="line"><span class="number">14.4755082856</span> 意外な盲点に注意！中学生の塾選びのポイント </span><br><span class="line">トピック<span class="number">19</span>:  冬 雪見 露天風呂 温泉 紹介 季節 </span><br><span class="line"><span class="number">23.088694487</span> 冬の温泉旅におすすめ！関東周辺の雪見露天風呂<span class="number">10</span>選 </span><br><span class="line"><span class="number">17.645473759</span> 脱・冬太り！スッキリボディを手に入れる冬太りストップダイエット </span><br><span class="line"><span class="number">13.3875534695</span> 美肌効果も期待大！ 東京から行ける雪見露天<span class="number">5</span>選 </span><br><span class="line">トピック<span class="number">20</span>:  トレンド 春 夏 ファッション 厳選 キーワード </span><br><span class="line"><span class="number">16.0910792269</span> <span class="number">2016</span>春夏トレンド<span class="number">5</span>「ランジェリーエッセンス」 </span><br><span class="line"><span class="number">14.6996582741</span> <span class="number">2016</span>春夏トレンド<span class="number">6</span>「モダンオールディーズ」 </span><br><span class="line"><span class="number">14.5019972252</span> <span class="number">2016</span>春夏トレンド<span class="number">4</span>「リーンエフォートレス」</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>指定した因子数20個分のトピックと, それを最も表現する特徴単語(そのトピックにおいて出現確率が高い単語 = 共起する単語), およびそのトピックを持つ文書を1トピックにつき上位3件表示しました. なお, プログラムと同階層に結果を書き出したファイルfeatures.txtが生成されます. </p>
<p>結果を見ると, それぞれのトピック(各トピックにおいて出現確率が最も高い単語)ごとに関連した単語が抽出できていることが確認できます. 特にトピック13の「チョコ」なんかは, 「バレンタイン 褒美 自分 ショコラ チョコレート」のように, チョコととても関係の深い単語が抽出できていることがわかります.</p>
<p>さらに, そのトピックを持つ上位3件の文書を実際に確認したところ, トピック13のチョコにおいては, 「スリーエフのバレンタイン2016！ご褒美チョコ＆感謝チョコ厳選5 」「ファミマのバレンタイン2016！あの人気店の味＆本格チョコ厳選7 」「自分へのご褒美チョコレート2016厳選バレンタイン」の全てが, まさにチョコな記事でした. </p>
<p>最後に, 各文書が持つ潜在的なトピックを確認します. 下記コードでは, 各文書に潜在するトピックの上位3つを表示するとともに, 結果をファイルに書き出します.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showarticles</span><span class="params">(titles,toppatterns,patternnames,out=<span class="string">'article.txt'</span>)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(out,<span class="string">'w'</span>) <span class="keyword">as</span> outfile:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 全文書について</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(titles)):</span><br><span class="line">            outfile.write(titles[j].encode(<span class="string">'utf8'</span>)+<span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"-----"</span> + str(j+<span class="number">1</span>) + <span class="string">"-----"</span> + <span class="string">"\n"</span> + titles[j] + <span class="string">"\n"</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># この文書の特徴たちを取得しソートする</span></span><br><span class="line">            toppatterns[j].sort()</span><br><span class="line">            toppatterns[j].reverse()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 上位3トピックを出力する</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">                outfile.write(str(toppatterns[j][i][<span class="number">0</span>])+<span class="string">' '</span>+str(patternnames[toppatterns[j][i][<span class="number">1</span>]])+<span class="string">'\n'</span>)</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"トピック"</span> + str(i+<span class="number">1</span>) + <span class="string">": "</span>,</span><br><span class="line">                <span class="keyword">for</span> hoge <span class="keyword">in</span> patternnames[toppatterns[j][i][<span class="number">1</span>]]:</span><br><span class="line">                    <span class="keyword">print</span> hoge,</span><br><span class="line">                <span class="keyword">print</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line">            outfile.write(<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure></p>
<p>それでは実行してみます.<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; nmf.showarticles(artt,topp,pn)</span><br><span class="line">-----<span class="number">1</span>-----</span><br><span class="line">肝臓疾患に効果を持つ唯一のロングセラー市販薬</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  子ども 薬 親 問題 ストレス 受験 </span><br><span class="line">トピック<span class="number">2</span>:  対策 指輪 雪 女性 試験 男性 </span><br><span class="line">トピック<span class="number">3</span>:  チョコ バレンタイン 褒美 自分 ショコラ チョコレート </span><br><span class="line">-----<span class="number">2</span>-----</span><br><span class="line">二日酔い対策の隠れたベストセラー市販薬「五苓散」</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  対策 指輪 雪 女性 試験 男性 </span><br><span class="line">トピック<span class="number">2</span>:  住宅 建築 設計 事務所 経験 現在 </span><br><span class="line">トピック<span class="number">3</span>:  人 口内 口 トラブル 環境 悪化 </span><br><span class="line">-----<span class="number">3</span>-----</span><br><span class="line">頭皮のかゆみ…くりかえす原因は常在菌による炎症？</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  人 口内 口 トラブル 環境 悪化 </span><br><span class="line">トピック<span class="number">2</span>:  住宅 建築 設計 事務所 経験 現在 </span><br><span class="line">トピック<span class="number">3</span>:  子ども 薬 親 問題 ストレス 受験 </span><br><span class="line">-----<span class="number">4</span>-----</span><br><span class="line">赤ちゃんから大人まで骨の健康に不可欠なビタミンD</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line">トピック<span class="number">2</span>:  紹介 今回 日本 月 金沢 五輪 </span><br><span class="line">トピック<span class="number">3</span>:  子ども 薬 親 問題 ストレス 受験 </span><br><span class="line">-----<span class="number">5</span>-----</span><br><span class="line">飲みにくい薬は「ゼリーの力」で解決を！</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  子ども 薬 親 問題 ストレス 受験 </span><br><span class="line">トピック<span class="number">2</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line">トピック<span class="number">3</span>:  ヨガ ポーズ 人 犬 効果 下 </span><br><span class="line">-----<span class="number">6</span>-----</span><br><span class="line">大事なプレゼン前に「声」が出ない、さあどうする？</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line">トピック<span class="number">2</span>:  木 魅力 街 プロ 紹介 場所 </span><br><span class="line">トピック<span class="number">3</span>:  猫 目 映画 今回 理由 妊娠 </span><br><span class="line">-----<span class="number">7</span>-----</span><br><span class="line">すっきりしない胃の不調は「健胃」と「制酸」で治す！</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  トレンド 春 夏 ファッション 厳選 キーワード </span><br><span class="line">トピック<span class="number">2</span>:  人 口内 口 トラブル 環境 悪化 </span><br><span class="line">トピック<span class="number">3</span>:  チョコ バレンタイン 褒美 自分 ショコラ チョコレート </span><br><span class="line">-----<span class="number">8</span>-----</span><br><span class="line">子どもを薬嫌いにさせないための「服薬補助ゼリー」</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  子ども 薬 親 問題 ストレス 受験 </span><br><span class="line">トピック<span class="number">2</span>:  人 口内 口 トラブル 環境 悪化 </span><br><span class="line">トピック<span class="number">3</span>:  ヨガ ポーズ 人 犬 効果 下 </span><br><span class="line">-----<span class="number">9</span>-----</span><br><span class="line">全身の健康は口から　口臭を「クマ笹歯みがき」で予防</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  人 口内 口 トラブル 環境 悪化 </span><br><span class="line">トピック<span class="number">2</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line">トピック<span class="number">3</span>:  チョコ バレンタイン 褒美 自分 ショコラ チョコレート </span><br><span class="line">-----<span class="number">10</span>-----</span><br><span class="line">胃腸薬「百草丸」が粘膜修復成分をプラスして新登場</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  将棋 愛 ガイド 登場 宴会 シーン </span><br><span class="line">トピック<span class="number">2</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line">トピック<span class="number">3</span>:  人 口内 口 トラブル 環境 悪化 </span><br><span class="line">-----<span class="number">11</span>-----</span><br><span class="line">ストレスからくる下痢…その原因と対処法は？</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  子ども 薬 親 問題 ストレス 受験 </span><br><span class="line">トピック<span class="number">2</span>:  人 口内 口 トラブル 環境 悪化 </span><br><span class="line">トピック<span class="number">3</span>:  塾 選び 受験 チェックポイント 中学生 失敗 </span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">-----<span class="number">328</span>-----</span><br><span class="line"><span class="number">2016</span>年は、こうして占いを使いこなす！</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  塾 選び 受験 チェックポイント 中学生 失敗 </span><br><span class="line">トピック<span class="number">2</span>:  ヨガ ポーズ 人 犬 効果 下 </span><br><span class="line">トピック<span class="number">3</span>:  トレンド 春 夏 ファッション 厳選 キーワード </span><br><span class="line">-----<span class="number">329</span>-----</span><br><span class="line">けっこう身近にある感動、東京<span class="number">23</span>区内で見られる「絶景スポット」</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  紹介 今回 日本 月 金沢 五輪 </span><br><span class="line">トピック<span class="number">2</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line">トピック<span class="number">3</span>:  冬 雪見 露天風呂 温泉 紹介 季節 </span><br><span class="line">-----<span class="number">330</span>-----</span><br><span class="line"><span class="number">2015</span>D1グランプリ 「UP GARAGE」</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  対策 指輪 雪 女性 試験 男性 </span><br><span class="line">トピック<span class="number">2</span>:  子ども 薬 親 問題 ストレス 受験 </span><br><span class="line">トピック<span class="number">3</span>:  体 幹 トレーニング メニュー 基本 効果 </span><br><span class="line">-----<span class="number">331</span>-----</span><br><span class="line"><span class="number">2015</span>D1グランプリ 「GOOD YEAR」</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  紹介 今回 日本 月 金沢 五輪 </span><br><span class="line">トピック<span class="number">2</span>:  対策 指輪 雪 女性 試験 男性 </span><br><span class="line">トピック<span class="number">3</span>:  チョコ バレンタイン 褒美 自分 ショコラ チョコレート </span><br><span class="line">-----<span class="number">332</span>-----</span><br><span class="line">役所に社食……「え、ここ一般人も入っていいの？」なグルメスポット</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  紹介 今回 日本 月 金沢 五輪 </span><br><span class="line">トピック<span class="number">2</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line">トピック<span class="number">3</span>:  木 魅力 街 プロ 紹介 場所 </span><br><span class="line">-----<span class="number">333</span>-----</span><br><span class="line">「<span class="number">2016</span>DGRQ」はこの娘たち！</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  チョコ バレンタイン 褒美 自分 ショコラ チョコレート </span><br><span class="line">トピック<span class="number">2</span>:  ヨガ ポーズ 人 犬 効果 下 </span><br><span class="line">トピック<span class="number">3</span>:  猫 目 映画 今回 理由 妊娠 </span><br><span class="line">-----<span class="number">334</span>-----</span><br><span class="line">どこよりも美味いコロッケがある本郷菊坂でグルメ散歩</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  ヨガ ポーズ 人 犬 効果 下 </span><br><span class="line">トピック<span class="number">2</span>:  木 魅力 街 プロ 紹介 場所 </span><br><span class="line">トピック<span class="number">3</span>:  人 口内 口 トラブル 環境 悪化 </span><br><span class="line">-----<span class="number">335</span>-----</span><br><span class="line"><span class="number">2016</span>年「RAYBRIG レースクイーン」はこの娘たち！</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  紹介 今回 日本 月 金沢 五輪 </span><br><span class="line">トピック<span class="number">2</span>:  冬 雪見 露天風呂 温泉 紹介 季節 </span><br><span class="line">トピック<span class="number">3</span>:  塾 選び 受験 チェックポイント 中学生 失敗 </span><br><span class="line">-----<span class="number">336</span>-----</span><br><span class="line">「東京オートサロン<span class="number">2016</span>」コンパニオン速報第<span class="number">2</span>弾</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  紹介 今回 日本 月 金沢 五輪 </span><br><span class="line">トピック<span class="number">2</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line">トピック<span class="number">3</span>:  チョコ バレンタイン 褒美 自分 ショコラ チョコレート </span><br><span class="line">-----<span class="number">337</span>-----</span><br><span class="line">「東京オートサロン<span class="number">2016</span>」コンパニオン速報第<span class="number">1</span>弾</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  紹介 今回 日本 月 金沢 五輪 </span><br><span class="line">トピック<span class="number">2</span>:  紹介 方法 iphone 機能 今回 ダイエット </span><br><span class="line">トピック<span class="number">3</span>:  チョコ バレンタイン 褒美 自分 ショコラ チョコレート </span><br><span class="line">-----<span class="number">338</span>-----</span><br><span class="line">オムライスのある昔ながらの喫茶店を探して歩く</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  木 魅力 街 プロ 紹介 場所 </span><br><span class="line">トピック<span class="number">2</span>:  チョコ バレンタイン 褒美 自分 ショコラ チョコレート </span><br><span class="line">トピック<span class="number">3</span>:  子ども 薬 親 問題 ストレス 受験 </span><br><span class="line">-----<span class="number">339</span>-----</span><br><span class="line">ルーペで味わい尽くす！凹版切手の魅力</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  紹介 今回 日本 月 金沢 五輪 </span><br><span class="line">トピック<span class="number">2</span>:  ポイント 楽天 現金 方法 ネット スーパー </span><br><span class="line">トピック<span class="number">3</span>:  住宅 建築 設計 事務所 経験 現在 </span><br><span class="line">-----<span class="number">340</span>-----</span><br><span class="line">東京から日帰りで行ける、無料でも十分に楽しめる見学施設</span><br><span class="line"></span><br><span class="line">トピック<span class="number">1</span>:  人気 パン カフェ コーヒー 栃木 中古 </span><br><span class="line">トピック<span class="number">2</span>:  冬 雪見 露天風呂 温泉 紹介 季節 </span><br><span class="line">トピック<span class="number">3</span>:  紹介 今回 日本 月 金沢 五輪</span><br></pre></td></tr></table></figure></p>
<p>全文書(340記事)について, 各文書の持つ潜在的なトピック上位3つを表示しました. なお, プログラムと同階層に結果を書き出したファイルarticle.txtが生成されます. </p>
<p>実際に, 340個目の文書「東京から日帰りで行ける、無料でも十分に楽しめる見学施設」を確認したところ, 抽出されたトピック通り, 「冬」に行って楽しめる「人気」の施設を「紹介」している記事でした. トピックをうまく抽出できているようです. 文書の持つ話題を的確に捉えていることが確認できました. </p>
<p>それではNMFの実装コードをまとめたファイルも<a href="https://github.com/camberbridge/camberbridge.github.io/blob/master/assets/sources/nmf.py" target="_blank" rel="external">GitHub</a>にあげておきます. </p>
<h2 id="まとめ">まとめ</h2><p>本記事ではトピックモデルの一種であるLSAを用いることによって, 多くのニュース記事から話題になっているトピックを抽出しました. また, 各文書が持つ潜在的な話題の抽出も行いました.</p>
<p>結果より, 文書が持つ話題を的確に抽出していることが確認できましたが, 「紹介」というトピックや, トピックにおいて出現確率の高い単語として「今回」「現在」のような副詞可能単語を確認しました. これらの単語は一般性が高いため, その文書を特徴づける単語としては適切ではありません. ゆえに, 文書の特徴の把握が難しくなります. したがって, 形態素解析によって形態素単位で分かち書きする処理の過程において, 「サ変接続」と「副詞可能」な単語も除外することによって, 把握が比較的容易なトピックの抽出が行えます. </p>
<h3 id="補足">補足</h3><p>本記事では各トピックにおける出現確率の高い6個の単語の中で, 確率が最も高い単語をトピックであるかのように扱いましたが, 正しくはこの単語6個すべてが1つのトピック(話題のクラスタ)であり, そして話題クラスタごとに関連した単語が6個抽出されている状態です. </p>
<p>実際のところ, この話題クラスタが”何のトピック”であるかの決定は, 本人の裁量で行うができます. したがって, 本記事では話題クラスタの中で出現確率が最も高い単語をトピックとしました.<br>この辺りの話については, <a href="http://www.amazon.co.jp/dp/4774137073?tag=chiharunosite-22" target="_blank" rel="external">アイスクリーム屋さんで統計学がわかる -回帰分析・因子分析編- </a>が分かりやすいので, 一読することをすすめます. </p>
<h2 id="参考文献">参考文献</h2><ul>
<li>岩田具治. “<a href="http://www.kspub.co.jp/book/detail/1529045.html" target="_blank" rel="external">トピックモデル</a>“. 2015.</li>
<li>Toby Segaran. “<a href="https://www.oreilly.co.jp/books/9784873113647/" target="_blank" rel="external">集合知プログラミング</a>“. 2008.</li>
</ul>
<p>トピックモデルの基本についてはトピックモデルの4章を参考にしました. 実装には集合知プログラミングの10章を参考にしました. </p>
<p>最後に, トピックモデルについてまとめたスライド集(<a href="http://blog.albert2005.co.jp/2015/09/15/topicmodel-study/" target="_blank" rel="external">ALBERT Official Blog -『トピックモデルによる統計的潜在意味解析』読書会を開催中です</a>)を見つけたのでリンクしておきます. </p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="概要">概要</h2><p>トピックモデルとは, 文書集合から特徴(話題)を抽出する手法です. また, それぞれの文書が持つ話題を抽出したり, 文書間の類似性を抽出することが可能な手法です.<br>そこで今回は, トピックモデルを用いてニュース記事を対象に話題を抽]]>
    </summary>
    
      <category term="LSA" scheme="http://camberbridge.github.io/tags/LSA/"/>
    
      <category term="NMF" scheme="http://camberbridge.github.io/tags/NMF/"/>
    
      <category term="janome" scheme="http://camberbridge.github.io/tags/janome/"/>
    
      <category term="python" scheme="http://camberbridge.github.io/tags/python/"/>
    
      <category term="トピックモデル" scheme="http://camberbridge.github.io/tags/%E3%83%88%E3%83%94%E3%83%83%E3%82%AF%E3%83%A2%E3%83%87%E3%83%AB/"/>
    
      <category term="形態素解析" scheme="http://camberbridge.github.io/tags/%E5%BD%A2%E6%85%8B%E7%B4%A0%E8%A7%A3%E6%9E%90/"/>
    
      <category term="潜在意味解析" scheme="http://camberbridge.github.io/tags/%E6%BD%9C%E5%9C%A8%E6%84%8F%E5%91%B3%E8%A7%A3%E6%9E%90/"/>
    
      <category term="非負値行列因子分解" scheme="http://camberbridge.github.io/tags/%E9%9D%9E%E8%B2%A0%E5%80%A4%E8%A1%8C%E5%88%97%E5%9B%A0%E5%AD%90%E5%88%86%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[テレビ朝日のインターンシップでインターンネットしてきた]]></title>
    <link href="http://camberbridge.github.io/2016/02/05/%E3%83%86%E3%83%AC%E3%83%93%E6%9C%9D%E6%97%A5%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%83%E3%83%97%E3%81%A7%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%B3%E3%83%8D%E3%83%83%E3%83%88%E3%81%97%E3%81%A6%E3%81%8D%E3%81%9F/"/>
    <id>http://camberbridge.github.io/2016/02/05/テレビ朝日のインターンシップでインターンネットしてきた/</id>
    <published>2016-02-05T02:21:24.000Z</published>
    <updated>2016-02-05T06:57:49.000Z</updated>
    <content type="html"><![CDATA[<p>9月の下旬からつい1週間くらい前まで、テレビ朝日の総合ビジネス局でインターンシップをしていました。<br>そこで今回は、テレビ朝日のインターンシップについて自分の感想を交えながら説明したいと思います。これで来年多くの応募があれば幸いです。</p>
<hr>
<h2 id="インターンネット概要">インターンネット概要</h2><p><a href="https://saiyo.tv-asahi.co.jp/2017/contents/event/intern.html" target="_blank" rel="external">インターンネット</a>とは、現場で実際に行われているWebビジネスに携わることができるテレビ朝日のインターンシップで、今年が初めての試みのようです。自分が調べた限りでは、テレビ放送局が行うインターンで「テレビ×Web」の仕事を<strong>実際に経験</strong>させてくれるのはここしかないと思います。<br>また、このインターンなんと、<strong>賞金(予算)として1,000,000円</strong>が与えられます。これも他では無いでしょう。</p>
<p>まとめると、このインターンネットは、1,000,000円の予算でWebサービスを作る活動のことです。<br>なお、活動は2種類「現行サービスの改善策提案型」と「新規サービスの提案型」があります。応募するにあたってどちらに取り組むかまでは決める必要はありませんが、自分の中でこんなことがあったらオモシロイ、とか絶対これがあれば便利、と言ったアイデアをたくさん持って参加することをおすすめします。<br>また、応募はグループ応募と個人応募があります。個人で参加した場合は当日にグループを作ることができるので、問題ありません。ただし、あらかじめ自分の役割を明確にしておくことをおすすめします。</p>
<h2 id="詳細">詳細</h2><p>この活動の目的は、勝ち取った予算でWebサービスを作り、それを世に発信することです。0を1に、1を10に、全部自分の手で行うことができます。<br>したがって、活動は2段階に分かれます。1段目は予算を取る活動、2段目は提案サービスをカタチにする活動です。<br>前者は参加者全員取り組むことができますが、後者は勝ち取った者のみ取り組むことができます。</p>
<h3 id="予算を取る活動">予算を取る活動</h3><p>予算を取るためには、先進のスタッフの前でめっちゃくちゃ良いプレゼンをして、自分の提案を認めてもらう必要があります。<br>そのため、市場や現行サービスの問題点を含めた状況把握、どれくらいのお金が動くのかor得られそうかを含めたマネタイズ、そして解決策と言った材料が必要になります。<br>そこで本インターンでは、めっちゃくちゃ良いプレゼンをするために、材料を揃えるための方法論を教わります。<br>今回教わったのは<strong>デザインスプリント</strong>です。デザインスプリントの詳細は本記事では割愛しますが、簡単に説明すると、デザインスプリントは仮想の人間を作り、その人に提供する価値を考える方法です。</p>
<p>この活動ではデザインスプリントを通して得られた材料をスライドに反映して、それを発表します。<br>ここで提案が認められると、次のステップへ進むことができます。</p>
<h3 id="提案サービスをカタチにする活動">提案サービスをカタチにする活動</h3><p>ここからはメンター2, 3人の監督の下、提案サービスをカタチにしていきます。<br>活動スタイルですが、基本的には1ヶ月の間グループで自主的に作業し、週1日の頻度で行う局内でのメンターとの会合にて進捗を報告し、また問題点等の共有を行います。なお、状況によっては活動期間が変動する場合があります。<br>活動はグループで行いますが、基本的な作業は個々人の役割に沿って行います。</p>
<p>活動内容の詳細はまだ公開できませんが、ここで言えることは<strong>実に濃い内容の有意義な活動</strong>ができます。</p>
<h2 id="まとめ">まとめ</h2><ul>
<li>実業務に近い提案ができる<br>– 提案をする相手・場はもちろんのこと、発表までの過程と提案が許可されてからそれをカタチにするまでの過程が実際の業務と非常に近いです。また、現場スタッフによるフィードバックを受けられます。</li>
<li>メンターがつく<br>– 先進の現場スタッフが綿密に指導してくれます。今回はSlackを用いることで密なコミュニケーションを図りました。おかげさまで問題を抱え込むことはほとんどありませんでした。</li>
<li>開発リソースを何でも使える<br>– 予算があるため、開発にかかるリソースはほぼ使い放題です。したがって、データ解析, 機械学習等で計算機をガンガン回す作業もできます。</li>
<li>現場を見られる<br>– 局内で現場スタッフの働く様子を見ることができます。また、話せる機会が多く存在します。</li>
<li>Webビジネスの臨場感を味わえる<br>– テレビ局が行うWebビジネスを話として聞ける場は多く存在しても、それを実際に経験できる場は恐らく他には存在しないでしょう。</li>
<li>開発ノウハウを知れる<br>– 開発の回し方から運用の方法まで、実際に行われている開発のノウハウを多く教わることができました。</li>
</ul>
<h2 id="最後に">最後に</h2><p>本インターンシップは、テレビ放送局の性質上、他業種・他職種の人と関わる機会が多く存在するため、多様な意見をもらいながらWebサービスを作ることができます。技術力はもちろん、考え方の成長も感じられることでしょう。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>9月の下旬からつい1週間くらい前まで、テレビ朝日の総合ビジネス局でインターンシップをしていました。<br>そこで今回は、テレビ朝日のインターンシップについて自分の感想を交えながら説明したいと思います。これで来年多くの応募があれば幸いです。</p>
<hr>
<h2 id="]]>
    </summary>
    
      <category term="インターンシップ" scheme="http://camberbridge.github.io/tags/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%83%E3%83%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[アドオンスクリプトから外部WebAPIをたたく]]></title>
    <link href="http://camberbridge.github.io/2015/09/25/%E3%82%A2%E3%83%89%E3%82%AA%E3%83%B3%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%8B%E3%82%89%E5%A4%96%E9%83%A8WebAPI%E3%82%92%E3%81%9F%E3%81%9F%E3%81%8F/"/>
    <id>http://camberbridge.github.io/2015/09/25/アドオンスクリプトから外部WebAPIをたたく/</id>
    <published>2015-09-25T13:13:06.000Z</published>
    <updated>2015-09-25T13:37:19.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>Firefox Add-on のアドオンスクリプトから外部WebAPIをたたくには(クロスドメイン制約やらの問題を配慮して)XMLHTTPRequestではHTTP通信ができなくなっている.<br>– XMLHTTPRequestがラッパされているAdd-on SDK提供のrequestモジュールを使えばHTTP通信ができる. 下記例.</li>
</ul>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var <span class="built_in">Request</span> = require(<span class="string">"sdk/request"</span>).<span class="built_in">Request</span>;</span><br><span class="line">var quijote = <span class="built_in">Request</span>(&#123;</span><br><span class="line">  url: <span class="string">"URL"</span>,</span><br><span class="line">  overrideMimeType: <span class="string">"text/plain; charset=latin1"</span>,</span><br><span class="line">  onComplete: <span class="keyword">function</span> (<span class="built_in">response</span>) &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="built_in">response</span>.text);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">quijote.<span class="keyword">get</span>();</span><br></pre></td></tr></table></figure>
<p>– ちなみにレスポンスで受ける文字列が化けるのでcharsetはutf-8にするといい</p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>Firefox Add-on のアドオンスクリプトから外部WebAPIをたたくには(クロスドメイン制約やらの問題を配慮して)XMLHTTPRequestではHTTP通信ができなくなっている.<br>– XMLHTTPRequestがラッパされているAdd-on ]]>
    </summary>
    
      <category term="WebAPI" scheme="http://camberbridge.github.io/tags/WebAPI/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[FirefoxAdd-onの開発着手]]></title>
    <link href="http://camberbridge.github.io/2015/08/14/FirefoxAdd-on%E3%81%AE%E9%96%8B%E7%99%BA%E7%9D%80%E6%89%8B/"/>
    <id>http://camberbridge.github.io/2015/08/14/FirefoxAdd-onの開発着手/</id>
    <published>2015-08-14T07:54:48.000Z</published>
    <updated>2015-08-14T08:19:50.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>Widgetモジュールの使用は非推奨となっていた<br>– uiモジュールを使うように</li>
<li>モジュールのパス指定はsdk/から始めるように(省略すると実行時にwarningが出る)</li>
</ul>
<p>下記はブラウザのメニューバーにアイコンを追加し, それをクリックすると新しいタブを開いてモジラのページへジャンプするコード<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> buttons = <span class="built_in">require</span>(<span class="string">'sdk/ui/button/action'</span>);</span><br><span class="line"><span class="keyword">var</span> tabs = <span class="built_in">require</span>(<span class="string">"sdk/tabs"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> button = buttons.ActionButton(&#123;</span><br><span class="line">  id: <span class="string">"mozilla-link"</span>,</span><br><span class="line">  label: <span class="string">"Visit Mozilla"</span>,</span><br><span class="line">  icon: &#123;</span><br><span class="line">    <span class="string">"16"</span>: <span class="string">"./icon-16.png"</span>,</span><br><span class="line">    <span class="string">"32"</span>: <span class="string">"./icon-32.png"</span>,</span><br><span class="line">    <span class="string">"64"</span>: <span class="string">"./icon-64.png"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onClick: handleClick</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleClick</span>(<span class="params">state</span>) </span>&#123;</span><br><span class="line">  tabs.open(<span class="string">"https://www.mozilla.org/"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>Widgetモジュールの使用は非推奨となっていた<br>– uiモジュールを使うように</li>
<li>モジュールのパス指定はsdk/から始めるように(省略すると実行時にwarningが出る)</li>
</ul>
<p>下記はブラウザのメニューバーにアイコン]]>
    </summary>
    
      <category term="アドオン" scheme="http://camberbridge.github.io/tags/%E3%82%A2%E3%83%89%E3%82%AA%E3%83%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Three.jsを使ってみた]]></title>
    <link href="http://camberbridge.github.io/2015/08/10/Three-js%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/"/>
    <id>http://camberbridge.github.io/2015/08/10/Three-jsを使ってみた/</id>
    <published>2015-08-10T06:24:40.000Z</published>
    <updated>2015-08-11T03:37:03.000Z</updated>
    <content type="html"><![CDATA[<ul><br>  <li>Three.jsとは<br>    WebGLをサポートした3次元CGを描画するためのライブラリ<br>    取得は<a href="https://github.com/mrdoob/three.js/" target="_blank" rel="external">ここ</a><br>  </li><br>  <li>参考<br>    <ul><br>      <li><a href="http://threejs.org/docs/" target="_blank" rel="external">three.js/docs</a></li><br>      <li><a href="http://www.yomotsu.net/wp/?p=597" target="_blank" rel="external">THREE.jsでWebGL</a></li><br>    </ul><br>  </li><br></ul>

<p></p><h3 id="exe-result">実行結果</h3><p></p>
<script>
window.addEventListener("DOMContentLoaded",function(){
    //表示領域の確保(HTMLに)
    var width = "300px";
    var height = "300px";
    var container = document.createElement("div");
    //h3内にdiv生成
    document.getElementById("exe-result").appendChild(container);
    container.style.width = width;
    container.style.height = height;

    //レンダラ生成
    var cWidth = container.offsetWidth;
    var cHeight = container.offsetHeight;
    var renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});
    renderer.setSize(cWidth, cHeight);
    renderer.setClearColor(0xffffff, 1);
    //生成したdiv内にレンダラが持つDOM要素を追加
    container.appendChild(renderer.domElement);

    //シーン生成
    var scene = new THREE.Scene();

    //カメラ生成
    var angle = 20;
    var near = 1;
    var far = 10000;
    var aspect = cWidth/cHeight;
    var camera = new THREE.PerspectiveCamera(angle, aspect, near, far);
    camera.position.set(0, 500, 1000);
    camera.lookAt({x:0, y:0, z:0});

    //表示する物体生成
    var geometry = new THREE.SphereGeometry(150, 20, 20);
    var material = new THREE.MeshBasicMaterial({color: 0x0000ff, wireframe: true});
    var mesh = new THREE.Mesh(geometry, material);

    //シーンに物体追加
    scene.add(mesh);

    //レンダリング
    renderer.render(scene, camera);

    //アニメーション
    var theta = 0;
    var rgbR = 0, rgbG = 0, rgbB = 0;
    var evalR = true, evalG = true, evalB = true;
    var rotate = function(){
        theta += 0.01;
        theta %= 2 * Math.PI;
        mesh.rotation.y = theta;
    if(evalR == true){
      rgbR += 0.01;
    }else if(evalR == false){
      rgbR -= 0.01;
    }
        if(rgbR == 1){
          evalR = false;
        }else if(rgbR == 0){
      evalR = true;
    }
        if(evalG == true){
          rgbG += 0.02;
        }else if(evalG == false){
          rgbG -= 0.02;
        }
        if(rgbG >= 1){
          evalG = false;
        }else if(rgbG <= 0){
          evalG = true;
        }
        if(evalB == true){
          rgbB += 0.03;
        }else if(evalB == false){
          rgbB -= 0.03;
        }
        if(rgbB >= 1){
          evalB = false;
        }else if(rgbB <= 0){
          evalB = true;
        }
        material.color.setRGB(rgbR, rgbG, rgbB);
        renderer.render(scene, camera);
        requestAnimationFrame(rotate);
    };
    rotate();
});
</script>
]]></content>
    <summary type="html">
    <![CDATA[<ul><br>  <li>Three.jsとは<br>    WebGLをサポートした3次元CGを描画するためのライブラリ<br>    取得は<a href="https://github.com/mrdoob/three.js/" target="_blank" rel="]]>
    </summary>
    
      <category term="Three.js" scheme="http://camberbridge.github.io/tags/Three-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo始めた]]></title>
    <link href="http://camberbridge.github.io/2015/08/09/Hexo%E5%A7%8B%E3%82%81%E3%81%9F/"/>
    <id>http://camberbridge.github.io/2015/08/09/Hexo始めた/</id>
    <published>2015-08-09T09:46:00.000Z</published>
    <updated>2015-08-10T03:13:26.000Z</updated>
    <content type="html"><![CDATA[<ul><br>  <li>hexoとは<br>  静的サイトジェネレータの1つ<br>  読み方分からん<br>  </li><br>  <li>シンタックス<br>  <a href="http://qiita.com" target="_blank" rel="external">Qiita</a>のようにシンタックスハイライトされる<br>  </li><br>  <li>手順<br>    <ol><br>      <li> ブログ生成<br>      <code>$ hexo new “hoge”</code><br>      source/_posts 配下に .md ファイルが生成される<br>      </li><br>      <li>ローカル環境でサーバ起動して確認<br>      <code>$ hexo server</code><br>      </li><br>      <li>デプロイ<br>      <code>$ hexo deploy -g</code><br>      これは generate の役目も担う<br>      </li><br>    </ol><br>  </li><br></ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul><br>  <li>hexoとは<br>  静的サイトジェネレータの1つ<br>  読み方分からん<br>  </li><br>  <li>シンタックス<br>  <a href="http://qiita.com" target="_blank" rel="extern]]>
    </summary>
    
      <category term="hexo" scheme="http://camberbridge.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>